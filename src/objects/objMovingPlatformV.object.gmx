<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objMovingPlatform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Set up the following actions in the creation code of the specific platform:
 
 1. dir - The direction of the platform ("hor" for moving horizontally, "ver" for moving 
    vertically)
 2. movestart - If the platform will move in a certain way first (1 for down/right first, 
    -1 for up/left first)
 3. spd - The horizontal/vertical speed of the platform*/
 
dir = "ver"; //Moves horizontally by default
/*movestart = 1; //Moves dowm/right first by default
spd = 3; //Moves at this speed by default*/

cantouch = true;
touchframes = 5;

hsp = 0;
vsp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dir == "hor"
{
    hsp = (spd*movestart);
    vsp = 0;
}
else if dir == "ver"
{
    hsp = 0;
    vsp = (spd*movestart);
}

/*if cantouch == true &amp;&amp; ((place_meeting (x, y+1, objPlatformStop) &amp;&amp; dir == "ver") or (place_meeting (x, y-1, objPlatformStop) &amp;&amp; dir == "ver") or (place_meeting (x+1, y, objPlatformStop) &amp;&amp; dir == "hor") or (place_meeting (x-1, y, objPlatformStop) &amp;&amp; dir == "hor") or (place_meeting (x, y+1, objSolid2) &amp;&amp; dir == "ver") or (place_meeting (x, y-1, objSolid2) &amp;&amp; dir == "ver") or (place_meeting (x+1, y, objSolid2) &amp;&amp; dir == "hor") or (place_meeting (x-1, y, objSolid2) &amp;&amp; dir == "hor"))
{
    movestart = -movestart;
    cantouch = false;
    touchframes -= 1;
}
else if cantouch == false
{
    if touchframes &gt;= 0
    {
        cantouch = true;
        touchframes = 5;
    }
}*/

x += hsp;
y += vsp;

if vsp &lt; 0 &amp;&amp; y &lt; ystopa
   movestart = -movestart;
else if vsp &gt; 0 &amp;&amp; y &gt; ystopb
   movestart = -movestart;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
