<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room == rmControls
{
    if keyboard_check_pressed (vk_right)
    {
       global.controltype += 1;
       audio_play_sound (sndMenuNavigate, 10, false);
    }
    if keyboard_check_pressed (vk_left)
    {
       global.controltype -= 1;
       audio_play_sound (sndMenuNavigate, 10, false);
    }
}
   
if global.controltype &gt; 2
   global.controltype = 0;
if global.controltype &lt; 0
   global.controltype = 2;
   
/*if global.controltype == 0
{
    sprite_index = sprArrows;
    if instance_exists (objAR) objAR.sprite_index = sprArrows;
    if instance_exists (objZ) objZ.sprite_index = sprZ;
    if instance_exists (objX) objX.sprite_index = sprX;
    if instance_exists (objC) objC.sprite_index = sprC;
    if instance_exists (objSpace) objSpace.sprite_index = sprSpace;
    if instance_exists (objA) objA.sprite_index = sprA;
    if instance_exists (objD) objD.sprite_index = sprD;
}
else if global.controltype == 1
{
    sprite_index = sprDPad;
    if instance_exists (objAR) objAR.sprite_index = sprDPad;
    if instance_exists (objZ) objZ.sprite_index = sprAButton;
    if instance_exists (objX) objX.sprite_index = sprBButton;
    if instance_exists (objC) objC.sprite_index = sprYButton;
    if instance_exists (objSpace) objSpace.sprite_index = sprXButton;
    if instance_exists (objA) objA.sprite_index = sprLBButton;
    if instance_exists (objD) objD.sprite_index = sprRBButton;
}
else if global.controltype == 2
{
    sprite_index = sprArrowPad;
    if instance_exists (objAR) objAR.sprite_index = sprArrowPad;
    if instance_exists (objZ) objZ.sprite_index = sprCrossButton;
    if instance_exists (objX) objX.sprite_index = sprCircleButton;
    if instance_exists (objC) objC.sprite_index = sprTriangleButton;
    if instance_exists (objSpace) objSpace.sprite_index = sprSquareButton;
    if instance_exists (objA) objA.sprite_index = sprL1Button;
    if instance_exists (objD) objD.sprite_index = sprR1Button;
}*/

if keyboard_check_pressed (ord("Z")) &amp;&amp; room == rmControls
{
    alarm[0] = 40;
    instance_create (0, 0, objFade);
    audio_play_sound (sndMenuSelect, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
