<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canPressZ = false;
txt = "";
txtline = 0;
maxtext = 0;
alarm[0] = 2;
alarm[1] = 1;

if room == rmShantaeHub1 or room == rmShantaeHub2
   maxtext = 1;
else if room == rmS2rm8
{
    switch global.dialogue0
    {
        case false:
             maxtext = 4;
        break;
        case true:
             maxtext = 2;
        break;
    }
}
else if room == rmS2rm4
{
    switch global.dialogue1
    {
        case false:
             maxtext = 12;
        break;
        case true:
             if global.tablet = false
                  maxtext = 1;
        break;
    }
    if global.tablet = true
       maxtext = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room == rmShantaeHub1
    room_goto (rmShantaeSelect);
else if room == rmShantaeHub2
     room_goto (rmShantaeSelect2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room == rmShantaeHub1 or room == rmShantaeHub2
{   
    if global.controltype == 0
        txt = "Are we ready to leave?#(Press Z to accept, press X to decline.)";
    if global.controltype == 1
        txt = "Are we ready to leave?#(Press A to accept, press B to decline.)";
    if global.controltype == 2
        txt = "Are we ready to leave?#(Press Cross to accept, press Circle#to decline.)";
}
else if room == rmS2rm8
{
    switch global.dialogue0
    {
        case false:
             txt = "Hey you, girlfriend! Could you please#turn the heat up? It's a little#cold in here."
        break;
        case true:
             txt = "Thanks, a lot, sis! Take this tablet with#you.";
        break;
    }
}
else if room == rmS2rm4
{
    switch global.dialogue1
    {
        case false:
             txt = "Oh, hey there!"
        break;
        case true:
             if global.tablet == false
                  txt = "Now, can you find my tablet?";
        break;
    }
    if global.tablet == true
    {
        txt = "Thanks for finding my tablet!"
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canPressZ = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed (ord("X"))
{
    instance_destroy();
    with objModel instance_destroy();
    with objShantae
    {
        canMove = true;
    }
}
else if keyboard_check_pressed (ord("Z")) &amp;&amp; (room == rmShantaeHub1 or room == rmShantaeHub2)
{
    if txtline != maxtext
    {
        txtline = 1;
        txt = "Okay then, we're off!";
    }
    else
    {
        alarm[2] = 40;
        instance_create (0, 0, objFade);
    }
}
else if keyboard_check_pressed (ord("Z")) &amp;&amp; room == rmS2rm8
{
    switch global.dialogue0
    {
        case false:
            if txtline != maxtext
            {
                txtline += 1;
                
                if txtline == 1
                {
                    txt = "Yeah, please do it for us!";
                    with objModel sprite_index = sprVinegarModel;
                }
                if txtline == 2
                {
                    txt = "I'm not sure how to, but...";
                    with objModel sprite_index = sprShantaeModel6;
                }
                if txtline == 3
                {
                    txt = "Okay then, if you say so.#I'll be back in no time!";
                    with objModel sprite_index = sprShantaeModel4;
                }
                if txtline == 4
                {
                    instance_destroy();
                    with objModel instance_destroy();
                    with objShantae
                    {
                        canMove = true;
                    }
                }
            }
            else
            {
                alarm[2] = 40;
                instance_create (0, 0, objFade);
            }
        break;
        case true:
             if txtline != maxtext
             {
                txtline += 1;
                
                if txtline == 1
                {
                    txt = "Okay, see you guys later!";
                    with objModel sprite_index = sprShantaeModel2;
                }
                if txtline == 2
                {
                    if global.dialogue0 == 1
                    {
                        global.dialogue0 = 2;
                        global.tablet = 1;
                        audio_play_sound (sndChaosEmerald, 10, false);
                    }
                    instance_destroy();
                    with objModel instance_destroy();
                    with objShantae canMove = true;
                    
                }
             }
        break;
    }
}
else if keyboard_check_pressed (ord("Z")) &amp;&amp; room == rmS2rm4
{
    switch global.dialogue0
    {
        case false:
            if txtline != maxtext
            {
                txtline += 1;
                
                if txtline == 1
                {
                    txt = "I wasn't expecting to see#you anytime soon!";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 2 &amp;&amp; room == rmS2rm4
                {
                    txt = "But anyway, let's get to the#point here.";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 3 &amp;&amp; room == rmS2rm4
                {
                    txt = "You see this rock next to me?";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 4 &amp;&amp; room == rmS2rm4
                {
                    txt = "On that rock is a ring indent.";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 5 &amp;&amp; room == rmS2rm4
                {
                    txt = "You must find the ring that is#hidden somewhere on this island...";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 6 &amp;&amp; room == rmS2rm4
                {
                    txt = "...then come back here and place#the ring into this rock.";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 7 &amp;&amp; room == rmS2rm4
                {
                    txt = "This will then open up a hidden gate.";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 8 &amp;&amp; room == rmS2rm4
                {
                    txt = "Once you have done that, find my#tablet and bring it back to me.";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 9 &amp;&amp; room == rmS2rm4
                {
                    txt = "It is hidden somewhere on this island.";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 10 &amp;&amp; room == rmS2rm4
                {
                    txt = "Understand?";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 11 &amp;&amp; room == rmS2rm4
                {
                    txt = "Okay, now get going!";
                    with objModel sprite_index = sprNoModel;
                }
                if txtline == 12
                {
                    instance_destroy();
                    with objModel instance_destroy();
                    with objShantae canMove = true;
                }
            }
            else
            {
                alarm[2] = 40;
                instance_create (0, 0, objFade);
            }
        break;
        case true:
             if txtline != maxtext &amp;&amp; global.tablet == false
             {
                txtline += 1;
                
                if txtline == 1
                {
                    instance_destroy();
                    with objModel instance_destroy();
                    with objShantae canMove = true;
                }
             }
        break;
    }
    if global.tablet == true
    {
        txtline += 1;
        
        if txtline == 1
        {
            txt = "Please take this key with you.";
            with objModel sprite_index = sprNoModel;
        }
        if txtline == 2
        {
            txt = "It will take you to the dungeon.";
            with objModel sprite_index = sprNoModel;
        }
        if txtline == 3
        {
            txt = "Good Luck!";
            with objModel sprite_index = sprNoModel;
        }
        if txtline == 4
        {
            instance_destroy();
            global.keys += 1;
            with objModel instance_destroy();
            with objShantae canMove = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font (fntFont);
scrDrawOutlines (view_xview[0], view_yview[0]+144, txt, c_black, c_white, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
