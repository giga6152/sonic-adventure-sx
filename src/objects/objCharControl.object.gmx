<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>objSonicModified.vsp=0
objSonicModified.hsp=0
objSonicModified.enable=0

aux_yspeed=objSonicModified.vsp;
time=3;
first=global.First.assigned;  //global.first, global.second, and global.third
second=global.Second.assigned; //are instances created in the script that has 
third=global.Third.assigned;   //created this object
turn=1; //start pressing keys
allow=0;  //to avoid bugs
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>allow = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>objSonicModified.vsp=aux_yspeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if turn=1 (that means we not pressed any key yet), the only thing we need to do is set turn=2 if we pressed the correct key
if turn=2, first we check if key pressed is or is not the needed key. If we fail, we reset the sequence. Otherwise, set turn=3;
if turn=3, we check again the key pressed. If fail, reset; if not, shoot Sonic and destroy all objects involved in algorythm.
*/


//--------------------------------Make "dissappear" chars-------------

time-=(1/60);

if turn=3{
if (!keyboard_check_pressed(third) &amp;&amp; keyboard_check_pressed(vk_anykey)&amp;&amp; allow=0) time = 0;
if keyboard_check_pressed(third) with (prtChar){instance_destroy(); time=3 audio_play_sound (sndQTEClear, 10, false);}
allow=1;
}
if turn=2{
if (!keyboard_check_pressed(second) &amp;&amp; keyboard_check_pressed(vk_anykey)&amp;&amp; allow=0) time = 0;  
if (keyboard_check_pressed(second)){ global.Second.visible=0;turn=3; audio_play_sound (sndQTEPush, 10, false)}
objSonicModified.vsp=0
objSonicModified.hsp=0
objSonicModified.enable=0
allow=1;
}
if turn=1{
if (!keyboard_check_pressed(first) &amp;&amp; keyboard_check_pressed(vk_anykey)&amp;&amp; allow=0) time = 0;
if (keyboard_check_pressed(first)&amp;&amp; allow=0){ global.First.visible=0;turn=2; audio_play_sound (sndQTEPush, 10, false)}
objSonicModified.vsp=0
objSonicModified.hsp=0
objSonicModified.enable=0
allow=1;
}

//----------------------------------------------------------------------



if (!instance_exists(prtChar)){
with (objSonicModified){
action=6;
seq=0;
vsp=-15
hsp=15.86 //Just like the ramp, the correct input option variables can be changed to the desired speed
enable=1
alarm[6]=120}
instance_destroy()
}



if time&lt;=0{
audio_play_sound (sndQTEFail, 10, false);
with (objSonicModified){
action=6;
seq=0
vsp=-5
hsp=10
enable=1
alarm[6]=120}
with (prtChar) instance_destroy();
instance_destroy()
}
allow=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font (fntFont);
scrDrawOutlines (view_xview[0]+250, view_yview[0]+240, time, c_black, c_white, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
