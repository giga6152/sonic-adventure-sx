<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtMoving</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists (objMinigameSSR_P2) &amp;&amp; room_width != 480 &amp;&amp; room_height != 360
{
    if view_xview[1]&lt;room_width-view_wview[1]-2 //&amp;&amp; global.setview=0
    {
    view_xview[1]=objMinigameSSR_P2.x-240+objMinigameSSR_P2.hsp*6*cos(objMinigameSSR_P2.angle*pi/180)
    }
    else
    if view_xview[1]&gt;room_width-view_wview[1]-2 &amp;&amp; instance_exists (objSignpost)
    {view_xview[1]=room_width-view_wview[1]}
    else
    {view_xview[1]=objMinigameSSR_P2.x-240+objMinigameSSR_P2.hsp*6*cos(objMinigameSSR_P2.angle*pi/180)}
    
    /*if view_yview[1]&lt;room_height-view_hview[1]-2 &amp;&amp; global.setview=0
    {view_yview[1]=objMinigameSSR_P2.y-160+objMinigameSSR_P2.vsp*4*cos(objMinigameSSR_P2.angle*pi/180)}
    else
    if view_yview[1]&gt;room_height-view_hview[1]-2 &amp;&amp; global.setview=0
    {view_yview[1]=room_height-view_hview[1]}
    else
    {view_yview[1]=objMinigameSSR_P2.y-160+objMinigameSSR_P2.vsp*4*cos(objMinigameSSR_P2.angle*pi/180)}*/
    
    view_yview[1]=objMinigameSSR_P2.y-160-objMinigameSSR_P2.hsp*6*sin(objMinigameSSR_P2.angle*pi/180)
    
    if view_xview[1]&lt;0
    {view_xview[1]=0}
    
    if view_yview[1]&lt;0
    {view_yview[1]=0}
    
    if view_xview[1]+view_wview[1]&gt;room_width
    {view_xview[1]=room_width-view_wview[1]}
    
    if view_yview[1]+view_hview[1]&gt;room_height
    {view_yview[1]=room_height-view_hview[1]}
    
    if objMinigameSSR_P2.x&lt;view_xview[1]+2
    {objMinigameSSR_P2.x=view_xview[1]+2 objMinigameSSR_P2.hsp=0}
    if objMinigameSSR_P2.x&gt;room_width-2 
    {objMinigameSSR_P2.x=room_width-2 objMinigameSSR_P2.hsp=0}
}
else
{
    if instance_exists (objPlayer)
    {
        view_xview[1] = objPlayer.x-240;
        view_yview[1] = objPlayer.y-180;
        
        if view_xview[1]&lt;0
        {view_xview[1]=0}
        
        if view_yview[1]&lt;0
        {view_yview[1]=0}
        
        if view_xview[1]+view_wview[1]&gt;room_width
        {view_xview[1]=room_width-view_wview[1]}
        
        if view_yview[1]+view_hview[1]&gt;room_height
        {view_yview[1]=room_height-view_hview[1]}
    }
    if instance_exists (objDeadPlayer2)
    {
        view_xview[1] = objDeadPlayer2.x-240;
        view_yview[1] = objDeadPlayer2.y-180;
        
        if view_xview[1]&lt;0
        {view_xview[1]=0}
        
        if view_yview[1]&lt;0
        {view_yview[1]=0}
        
        if view_xview[1]+view_wview[1]&gt;room_width
        {view_xview[1]=room_width-view_wview[1]}
        
        if view_yview[1]+view_hview[1]&gt;room_height
        {view_yview[1]=room_height-view_hview[1]}
    }
}

if room_width == 480 &amp;&amp; room_height == 360
    instance_destroy();
    
if !instance_exists (objGamepad)
    instance_create (x, y, objGamepad);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
