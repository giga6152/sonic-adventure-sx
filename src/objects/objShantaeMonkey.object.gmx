<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMonkeyStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>objAnimal</parentName>
  <maskName>mskMonkey</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.16;
vel = 0;
inMaw = false;
ground = true;
wallcling = false;
bullet = false;
canwallcling = true;
canMove = true;
canGetHit = true;
wallTimer = 20;
sprite_old = sprMonkeyStand;

KEY_LEFT = keyboard_check (vk_left) or (gamepad_axis_value (0, gp_axislh) &lt; -0.6);
KEY_RIGHT = keyboard_check (vk_right) or (gamepad_axis_value (0, gp_axislh) &gt; 0.6);
KEY_UP = keyboard_check (vk_up) or (gamepad_axis_value (0, gp_axislv) &lt; -0.6);
KEY_DOWN = keyboard_check (vk_down) or (gamepad_axis_value (0, gp_axislv) &gt; 0.6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canGetHit = true;
global.invincible = false;
image_alpha = 1;
audio_stop_sound (bgmInvincible);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true;
sprite_index = sprMonkeyStand;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_change (objShantae, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 40;
instance_create (view_xview[0], view_yview[0], objFadeWhite);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if x &lt; 4
   x = 4;
if x &gt; room_width-4
   x = room_width-4;
if y &lt; 5
   y = 5;
   
if sprite_index == sprMonkeyRun
   image_speed = 0.33;
else
    image_speed = 0.16;

KEY_LEFT = keyboard_check (vk_left) or (gamepad_axis_value (0, gp_axislh) &lt; -0.6);
KEY_RIGHT = keyboard_check (vk_right) or (gamepad_axis_value (0, gp_axislh) &gt; 0.6);
KEY_UP = keyboard_check (vk_up) or (gamepad_axis_value (0, gp_axislv) &lt; -0.6);
KEY_DOWN = keyboard_check (vk_down) or (gamepad_axis_value (0, gp_axislv) &gt; 0.6);

//Basic movements
if KEY_LEFT &amp;&amp; !place_meeting (x+vel-1, y, objSolid2) &amp;&amp; wallcling == false &amp;&amp; bullet == false &amp;&amp; canMove == true
{
    image_xscale = -1;
    vel = -3.75;
    sprite_index = sprMonkeyRun;
}
else if KEY_RIGHT &amp;&amp; !place_meeting (x+vel+1, y, objSolid2) &amp;&amp; wallcling == false &amp;&amp; bullet == false &amp;&amp; canMove = true
{
    image_xscale = 1;
    vel = 3.75;
    sprite_index = sprMonkeyRun;
}
if !KEY_LEFT &amp;&amp; !KEY_RIGHT &amp;&amp; bullet == false
   vel = 0;

if vel == 0 &amp;&amp; ground == true
   sprite_index = sprMonkeyStand;

if place_meeting (x+vel+1, y, objSolid2) or place_meeting (x+vel-1, y, objSolid2)
   vel = 0;

//Ground check
if !inMaw
{
    if (place_meeting (x, y+vspeed+1, objSolid2) or place_meeting (x, y+vspeed+1, objTopSolid) or place_meeting (x, y+vspeed+1, objJumpThrough) &amp;&amp; vspeed &gt;= 0)
    {
        ground = true;
        gravity = 0;
    }
    else
    {
        ground = false;
        gravity = 0.25;
        sprite_index = sprMonkeyJump;
    }
}

if vspeed &gt; 8
   vspeed = 8;

/*The gravity does not apply if we are NOT on the ground but we are either wallclinging or
using the monkey bullet*/
if ground == false &amp;&amp; (wallcling == true or bullet == true)
   gravity = 0;

//Jumping
if ground == true &amp;&amp; keyboard_check_pressed (ord("Z")) &amp;&amp; canMove == true
{
    ground = false;
    vspeed = -8;
    sprite_index = sprMonkeyJump;
    audio_play_sound (sndShantaeHa, 10, false);
}

//Allow movement. The variable vel would do nothing otherwise.
x += (vel+hsp);
y += vsp;

//Top solid collision
scrCollideSlopes2();

/*Set to jump sprite when not on the ground, we are not wallclinging and we are not using
the monkey bullet*/
if ground == false &amp;&amp; wallcling == false &amp;&amp; bullet == false &amp;&amp; canMove == true
   sprite_index = sprMonkeyJump;
if wallcling == true
   sprite_index = sprMonkeyWallCling;
if bullet == true
   sprite_index = sprMonkeyBullet;
   
//Wallcinging
if ((!ground &amp;&amp; !wallcling &amp;&amp; canwallcling) or bullet) &amp;&amp; canMove
{
    if (KEY_LEFT &amp;&amp; place_meeting (x+vel-1, y, objSolid2) or KEY_RIGHT &amp;&amp; place_meeting (x+vel+1, y, objSolid2))
    {
        wallcling = true;
        sprite_index = sprMonkeyWallCling;
        gravity = 0;
        vel = 0;
    }
}

//Various wallcinging actions
if wallcling == true &amp;&amp; canMove == true //These actions can ONLY be done if we are wallcinging
{
    //Moving up and down the wall
    if KEY_UP &amp;&amp; !place_meeting (x, y+vspeed-1, objSolid2)
    {
        vspeed = -1;
    }
    else if KEY_DOWN &amp;&amp; !place_meeting (x, y+vspeed+1, objSolid2)
    {
        vspeed = 1;
    }
    
    if !KEY_UP &amp;&amp; !KEY_DOWN
       vspeed = 0;
       
    /*If we hit the ground while moving down a wall, we stop wallclinging and return to
    normal*/
    if place_meeting (x, y+vspeed+1, objSolid2)
    {
        wallcling = false;
        ground = true;
    }
    
    //Jumping off the wall
    if keyboard_check_pressed (ord("Z"))
    {
        wallcling = false;
        vspeed = -8;
        canwallcling = false;
        image_xscale = -image_xscale;
        vel = (3.5*image_xscale);
    }
    
    //Performing the monkey bullet
    if keyboard_check_pressed (ord("X"))
    {
        bullet = true;
        wallcling = false;
        canwallcling = false;
        sprite_index = sprMonkeyBullet;
        vspeed = 0;
        gravity = 0;
        image_xscale = -image_xscale;
        vel = (7*image_xscale);
    }
    if vspeed != 0 &amp;&amp; !collision_line (x, y, x+image_xscale*26, y, objSolid2, true, true)
       wallcling = false;
}

//If wallclinging is disabled, when we get a certain distance to the wall, enable it again
if canwallcling == false
{
    if distance_to_object (objSolid2) &lt; 50
    {
       if bullet == false
       {
          canwallcling = true;
       }
       else
       {
            if wallTimer &lt;= 0
            {
                bullet = false;
                canwallcling = true;
                wallTimer = 20;
            }
            else
            {
                bullet = true;
                wallTimer -= 1;
            }
       }
    }
}

//Change masks
if bullet == true
   mask_index = mskMonkeyBullet;
else
    mask_index = mskMonkey;
    
//Movement with a platform
var platformID; //This is only a temporary variable, this checks for a particular platform
platformID = (instance_place (x, y+1, objMovingPlatform));

if platformID != noone
{
    hsp = platformID.hsp;
    vsp = platformID.vsp;
}
else
{
    hsp = 0;
    vsp = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objDragonHeadRight">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid (direction, 12);
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyParent2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objJumpThrough">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrCollideSlopes2();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSlopeParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrCollideSlopes2();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSolid2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid (direction, 12);
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if y &gt; room_height
{
    global.hearts = 0;
    instance_change (objShantaeHitDie, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index != sprite_old
{
    image_index = 0;
    sprite_old = sprite_index;
}

draw_sprite_ext (sprite_index, image_index, round(x), round(y), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create (0, 0, objFadeWhite);
audio_play_sound (sndAnimalTransform, 10, false);
alarm[1] = 40;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
