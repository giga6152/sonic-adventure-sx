<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>objHUD</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 180;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists (objSonicModified) &amp;&amp; room != rmZ1_B
{
    x = objSonicModified.x;
    y = objSonicModified.y;
}
else if instance_exists (objBossScroll)
{
    x = objBossScroll.x;
    y = objBossScroll.y;
}
if instance_exists (objDeadPlayer) &amp;&amp; room != rmZ1_B
{
    x = objDeadPlayer.x;
    y = objDeadPlayer.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font (fntFont);

var drawMilli = floor (global.millisecondsC);

/*if global.seconds &lt; 10
    scrDrawOutlines(view_xview[0]+140, view_yview[0]+100, "CHECKPOINT: "+string(global.minutesC)+"'0"+string(global.secondsC)+'"'+string(drawMilli), c_black, c_white, 2);
else if drawMilli &lt; 10
    scrDrawOutlines(view_xview[0]+140, view_yview[0]+100, "CHECKPOINT: "+string(global.minutesC)+"'"+string(global.secondsC)+'"00'+string(drawMilli), c_black, c_white, 2);
else if drawMilli &lt; 100
    scrDrawOutlines(view_xview[0]+140, view_yview[0]+100, "CHECKPOINT: "+string(global.minutesC)+"'"+string(global.secondsC)+'"0'+string(drawMilli), c_black, c_white, 2);
else if global.seconds &lt; 10 &amp;&amp; drawMilli &lt; 10
    scrDrawOutlines(view_xview[0]+140, view_yview[0]+100, "CHECKPOINT: "+string(global.minutesC)+"'0"+string(global.secondsC)+'"00'+string(drawMilli), c_black, c_white, 2);
else if global.seconds &lt; 10 &amp;&amp; drawMilli &lt; 100
    scrDrawOutlines(view_xview[0]+140, view_yview[0]+100, "CHECKPOINT: "+string(global.minutesC)+"'0"+string(global.secondsC)+'"0'+string(drawMilli), c_black, c_white, 2);
else
    scrDrawOutlines(view_xview[0]+140, view_yview[0]+100, "CHECKPOINT: "+string(global.minutesC)+"'"+string(global.secondsC)+'"'+string(drawMilli), c_black, c_white, 2);*/
    
var dmil, dsec, dmin, brk1, brk2;
if drawMilli &lt; 10
    dmil = "00"+string(drawMilli);
else if drawMilli &lt; 100
    dmil = "0"+string(drawMilli);
else
    dmil = string(drawMilli);
    
if global.secondsC &lt; 10
    dsec = "0"+string(global.secondsC);
else
    dsec = string(global.secondsC);
    
if global.minutesC &lt; 10
    dmin = "0"+string(global.minutesC);
else
    dmin = string(global.minutesC);
    
brk1 = "'";
brk2 = '"';

scrDrawOutlines(view_xview[0]+140, view_yview[0]+100, "CHECKPOINT: "+dmin+brk1+dsec+brk2+dmil, c_black, c_white, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
