<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSkyPlayerStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>objPlayer</parentName>
  <maskName>mskSky</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vel = 0;
ground = true;
canMove = true;
throw = false;
canGetHit = true;
sprite_old = sprSkyPlayerStand;

KEY_LEFT = keyboard_check (vk_left) or (gamepad_axis_value (0, gp_axislh) &lt; -0.6);
KEY_RIGHT = keyboard_check (vk_right) or (gamepad_axis_value (0, gp_axislh) &gt; 0.6);
KEY_DOWN = keyboard_check (vk_down) or (gamepad_axis_value (0, gp_axislv) &gt; 0.6);
KEY_UP = keyboard_check (vk_up) or (gamepad_axis_value (0, gp_axislv) &lt; -0.6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canGetHit = true;
global.invincible = false;
image_alpha = 1;
audio_stop_sound (bgmInvincible);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true;
sprite_index = sprSkyPlayerStand;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists (objLagControl)
{
    instance_deactivate_region (view_xview[0]-32, view_yview[0]-32, view_wview[0]+64, view_hview[0]+64, false, true);
    instance_activate_region (view_xview[0]-16, view_yview[0]-16, view_wview[0]+32, view_hview[0]+32, true);
}

instance_activate_object (objSwitch);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>KEY_LEFT = keyboard_check (vk_left) or (gamepad_axis_value (0, gp_axislh) &lt; -0.6);
KEY_RIGHT = keyboard_check (vk_right) or (gamepad_axis_value (0, gp_axislh) &gt; 0.6);
KEY_DOWN = keyboard_check (vk_down) or (gamepad_axis_value (0, gp_axislv) &gt; 0.6);
KEY_UP = keyboard_check (vk_up) or (gamepad_axis_value (0, gp_axislv) &lt; -0.6);

if KEY_RIGHT &amp;&amp; !place_meeting (x+vel+1, y, objSolid2) &amp;&amp; canMove == true
{
    vel = 3.25;
}
else if KEY_LEFT &amp;&amp; !place_meeting (x+vel-1, y, objSolid2) &amp;&amp; canMove == true
{
    vel = -3.25;
}
else if (!KEY_LEFT &amp;&amp; !KEY_RIGHT) or canMove == false
     vel = 0;
     
if place_meeting (x+vel+1, y, objSolid2) or place_meeting (x+vel-1, y, objSolid2)
   vel = 0;

x += vel;
scrCollideSlopes2();

if x &lt; 3
    x = 3;
if x &gt; room_width - 3
    x = room_width - 3;
if y &lt; -5
    y = -5;
    
if place_meeting (x, y+vspeed+1, objSolid2) &amp;&amp; vspeed &gt;= 0 or place_meeting (x, y+vspeed+1, objTopSolid) &amp;&amp; vspeed &gt;= 0
{
    ground = true;
    gravity = 0;
}
else
{
    ground = false;
    gravity = 0.25;
}

if vspeed &gt; 8
    vspeed = 8;
    
if ground == true &amp;&amp; keyboard_check_pressed (ord("Z")) &amp;&amp; canMove == true
{
    if place_meeting (x, y+vspeed+1, objTopSolid)
    {
        if vel == 0 &amp;&amp; KEY_DOWN
        {
            /*ground = false;
            if instance_exists (objTopSolid)
            {
                with objTopSolid
                {
                    instance_change (objNoTopSolid, true);
                }   
            }*/
        }
        else
        {
            vspeed = -7;
            audio_play_sound (sndSkyJump, 10, false);
        }
    }
    else
    {
        vspeed = -7;
        audio_play_sound (sndSkyJump, 10, false);
    }
}

image_speed = 0.16;

if vel == 0 &amp;&amp; ground == true &amp;&amp; canMove == true
   sprite_index = sprSkyPlayerStand;
else if vel != 0 &amp;&amp; ground == true
     sprite_index = sprSkyPlayerRun;
else if !ground
{
    if vspeed &lt; 0
       sprite_index = sprSkyPlayerJump;
    else if vspeed &gt;= 0
         sprite_index = sprSkyPlayerFall;
}

if sprite_index == sprSkyThrow
{
    if image_index &gt; 4 &amp;&amp; image_index &lt; 6
    {
        if !instance_exists (objWrenchPlayer)
           instance_create (x, y, objWrenchPlayer);
    }
    else if image_index &gt; 8
    {
        if instance_exists (objWrenchPlayer)
        {
            sprite_index = sprSky;
            image_xscale = -image_xscale;
        }
        else
        {
            sprite_index = sprSkyPlayerStand;
            throw = false;
            canMove = true;
        }
        
    }
    audio_play_sound (sndSkyJump, 10, false);
}

if vel &lt; 0
    image_xscale = -1
else if vel &gt; 0
    image_xscale = 1;
    
if keyboard_check_pressed (ord("X")) &amp;&amp; ground == true &amp;&amp; throw == false &amp;&amp; canMove == true
{
    canMove = false;
    throw = true;
    vel = 0;
    sprite_index = sprSkyThrow;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSlopeParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrCollideSlopes2();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSolid2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid (direction, 12);
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create (0, 0, objLivesCounterSky);
instance_create (0, 0, objLives);
instance_create (0, 0, objHeartCounter);
instance_create (0, 0, objGems);
instance_create (0, 0, objGemCounter);
//instance_create (0, 0, objItemHUD);

if global.playerspawnx == -1 &amp;&amp; global.playerspawny == -1
{
    global.playerspawnx = x;
    global.playerspawny = y;
}

x = global.playerspawnx;
y = global.playerspawny;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if y &gt; room_height
{
    global.hearts = 0;
    instance_change (objSkyHitDie, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index != sprite_old
{
    image_index = 0;
    sprite_old = sprite_index;
}

draw_sprite_ext (sprite_index, image_index, round(x), round(y), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
