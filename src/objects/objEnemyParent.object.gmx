<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objHomingParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists (objBar)
{
    if instance_exists (objShadow)
        objShadow.chaos_energy += 15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp &lt;= 0
{
    instance_change (objEnemyDestroy, true);
    if !instance_exists (objComboText)
    {
        global.combo += 1;
        global.combo_timer = 300;
    }
}

if instance_exists (objDarkBar) &amp;&amp; hp &lt;= 0 global.dark_energy += 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWhiteBlast">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
global.combo += 1;
global.combo_timer = 300;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSonicHoming">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_change (objEnemyDestroy, true);

vspeed = -5;
with other instance_change (objSonic, true);

with objSonic
{
    sprite_index = sprSonicJump;
    vspeed = -5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSonicDash">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_change (objEnemyDestroy, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSuperSonic">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_change (objEnemyDestroy, true);
    
    if other.vspeed &gt; 0 &amp;&amp; other.sprite_index = sprSonicJump
    {
        if keyboard_check (ord("Z"))
        {
            if other.vspeed &gt; 3
                other.vspeed = -other.vspeed;
            else
                other.vspeed = -3;
        }
        else
            other.vspeed = -3;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSonic">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.sprite_index = sprSonicJump or other.sprite_index = sprSonicDash or other.sprite_index = sprSonicRoll or other.sprite_index = sprSonicSpindash or other.sprite_index = sprSonicFall or global.invincible = true or global.superstate != 0
{
    //Destroy the enemy
    instance_change (objEnemyDestroy, true);
    
    if other.vspeed &gt; 0 &amp;&amp; other.sprite_index = sprSonicJump
    {
        if keyboard_check (ord("Z"))
        {
            if other.vspeed &gt; 3
                other.vspeed = -other.vspeed;
            else
                other.vspeed = -3;
        }
        else
            other.vspeed = -3;
    }
    
    if other.homingattack == true
    {
        other.vspeed = 5;
        other.sprite_index = sprSonicJump;
    }
}
else if global.rings &gt; 0 or global.shield &gt; 0
{
    //Hurt the player
    if other.canHit == true
        scrHurtPlayer();
}
else
{
    //Kill the player
    if other.canHit == true
        with other instance_change (objSonicHitDie, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSonicModified">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if other.action == 1 or other.action == 3 or other.action == 4 or other.action == 5 or other.action == 7 global.invincible = true or global.superstate != 0
{
    //Destroy the enemy
    if other.action == 1 or other.action == 3 or other.action == 4 or other.action == 5 or other.action == 7
              instance_change (objEnemyDestroy, true);
    
    if other.vspeed &gt; 0 &amp;&amp; other.action == 1
    {
        if (other.KEY_A)
        {
            if other.vspeed &gt; 3
                other.vspeed = -other.vspeed;
            else
                other.vspeed = -3;
        }
        else
            other.vspeed = -3;
    }
    
else
{
if global.shield &gt; 0
{
with other
{
ready=200
action=9
ground=0
vsp=-8
enable=0
audio_play_sound (sndSonicOugh, 10, false)
}
}
else if global.rings&gt;0 &amp;&amp; global.shield == 0
{
if other.atk=0 &amp;&amp; other.ready&lt;=0 &amp;&amp; other.enable=1
{
with other
{
ready=200
action=9
audio_play_sound (sndSonicOugh, 10, false)
audio_play_sound (sndRingLose, 10, false)
scrLoseRings (global.rings, x, y, objLoseRing);
global.rings = 0;
ground=0
vsp=-8
enable=0
}
}
}
else
if other.atk=0 &amp;&amp; other.ready&lt;=0 &amp;&amp; other.enable=1 //Player dies if there are no rings
{
with other instance_change (objSonicHitDie, true);

}
}
}*/

if other.atk&gt;0 //If player is attacking, lose hp
{
other.vsp=-8
//audio_play_sound (sndBadnikDestroy, 10, false);
hp -= 1;//if !invulnerable hp -= 1;
/*if hp &gt; 0 &amp;&amp; !invulnerable
{invulnerable = true; alarm[3] = 30;}*/
if instance_exists (objDarkBar) &amp;&amp; hp &lt;= 0 global.dark_energy += 5;

if other.lock=1 //If player is using homing attack, bounce them off
{
other.action=other.rebounce_action
other.lock=0
other.speed=0
if instance_exists (objDarkBar) &amp;&amp; hp &lt;= 0 global.dark_energy += 5;
}
}

if global.invincible == true or global.superstate &gt; 0
{instance_change (objEnemyDestroy, true); 
if !instance_exists (objComboText)
{
    global.combo += 1;
    global.combo_timer = 300;
}
if instance_exists (objDarkBar) global.dark_energy += 5;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
