<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSignpost</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objDeactivable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
canSpin = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with objSonicModified instance_change (objSonicClear, true)
with objKnuckles instance_change (objKnucklesClear, true)
with objShadow instance_change (objSonicClear, true)
with objAmy instance_change (objAmyClear, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[2] = 40;
instance_create (0, 0, objFadeWhite);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists (objSonicModified) sprite_index = sprSignpostSpun;
if instance_exists (objKnuckles) sprite_index = sprSignpostSpunKnuckles;
if instance_exists (objShadow) sprite_index = sprSignpostSpunShadow;
if instance_exists (objAmy) sprite_index = sprSignpostSpunAmy;
alarm[2] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if canSpin == true &amp;&amp; instance_exists (objSonicModified) &amp;&amp; (place_meeting (x, y, objSonicModified) or objSonicModified.x == x)
{
    image_speed = 0.66;
    audio_play_sound (sndSignpost, 10, false);
    alarm[0] = 120;
    canSpin = false;
    global.startx = objSonicModified.xstart;
    global.starty = objSonicModified.ystart;
    objSonicModified.enable = false;
    objSonicModified.hsp -= (3*objSonicModified.xdir);
}
    
global.millisecondsG = global.milliseconds;
global.secondsG = global.seconds;
global.minutesG = global.minutes;
global.milG = global.mil;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSuperSonic">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canSpin = true
{
    image_speed = 0.66;
    alarm[0] = 120;
    canSpin = false;
    other.canMove = false;
    with other instance_change (objSonic, true);
    audio_stop_all();
    if room = rmZ1_1rm1 or room = rmZ1_1rm2
        audio_play_sound (bgmEmeraldGarden, 10, true);
}
    
global.millisecondsG = global.milliseconds;
global.secondsG = global.seconds;
global.minutesG = global.minutes;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSonicModified">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canSpin == true
{
    image_speed = 0.66;
    audio_play_sound (sndSignpost, 10, false);
    alarm[0] = 120;
    canSpin = false;
    global.startx = -1;
    global.starty = -1;
    
    with objPlayerStop canstop = true;
}
    
global.millisecondsG = global.milliseconds;
global.secondsG = global.seconds;
global.minutesG = global.minutes;
global.milG = global.mil;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
