<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTailsBossStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objBossParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ground = true;

initHpoints = 400;
hpoints = initHpoints;
hits = 16; /*1 hit = 25 hpoints of the boss. So every time the boss loses 25 hpoints one of 
the eight units is taken off the boss gauge*/

attackDamage = 1;

attackPattern = 0; //0 = stance, 1 = move, 2 = jump, 3 = dummy ring bomb, 4 = fly+dummy ring bomb
vel = 0;
maxvel = 12;
acc = 0.085;
image_speed = 0.16;
image_xscale = -1;

attackFrames = 120;
sprite_old = sprTailsBossStand;

sprite_move = sprTailsBossWalk;

alarm[0] = attackFrames;

canHit = true;

//destroyBossObject = objTailsBossDie;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canHit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attackFrames = 120; //Set the frames back to two seconds (or 120 frames)
attackPattern = choose (1, 2, 3, 4); //Choose from one of four attack patterns at random
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Decide on Tails' attacks, depending on the value of the attackPattern variable
if attackPattern == 0 //If the boss is standing
{
    vel = 0; //Boss does not move
    sprite_index = sprTailsBossStand; //Set the sprite to the standing position
    
    if attackFrames &gt; 0
       attackFrames -= 1; //Subtract 1 from the attackFrames variable every step
    
    if instance_exists (objPlayer) //Check if the player exists
    {
        if objPlayer.x &lt; x //If the player is to the left of the boss, the boss faces left
           image_xscale = -1;
        else if objPlayer.x &gt;= x //Same goes for the right
             image_xscale = 1;
    }
}
else if attackPattern == 1 //If the boss is just moving towards the player
{
    vel += (acc*image_xscale); //Accelerate depending on the boss' direction
    attackFrames = 120; //Set the attacking frames back to two seconds
    
    //Change sprites accordingly depending on the boss' speed 
    if vel &lt; 1.45 or vel &gt; -1.45
       sprite_index = sprTailsBossWalk; //Walk animation, minimum speed
    else if (vel &gt;= 1.45 &amp;&amp; vel &lt; 3.1) or (vel &lt;= -1.45 &amp;&amp; vel &gt; -3.1)
         sprite_index = sprTailsBossRun; //Run animation, between minimum and maximum
    else if vel &gt;= 3.1 or vel &lt;= -3.1
         sprite_index = sprTailsBossSprint; //Sprint animation, maximum speed
    
    //sprite_index = sprite_move; //This variable holds the running animations
    
    //If the boss is moving too fast, set movement speed to the maximum
    if vel &gt; maxvel
       vel = maxvel;
    else if vel &lt; -maxvel
         vel = -maxvel;
         
    //If the boss hits a wall while moving, set the attack pattern back to stance
    if place_meeting (x+vel+1, y, objSolid2) or place_meeting (x+vel-1, y, objSolid2)
    {
        vel = 0;
        attackPattern = 0;
    }
}
else if attackPattern == 2 &amp;&amp; ground == true //If the boss is jumping
{
    attackFrames = 120; //Set the attacking frames back to two seconds
    ground = false; //Boss is not on the ground
    vspeed = -7; //Reasonable jump height
    vel = (image_xscale*5.6); /*Speed is set and then multiplied by whatever direction
                              boss is currently facing in*/
    sprite_index = sprTailsBossJump; //Set the sprite accordingly
    if !audio_is_playing (sndTailsJump) audio_play_sound (sndTailsJump, 10, false);
    if !audio_is_playing (sndJump) audio_play_sound (sndJump, 10, false);
    attackPattern = 6;
}
else if attackPattern == 3 //If the boss is using a dummy ring bomb
{
    attackFrames = 120; //Set the attacking frames back to two seconds
    sprite_index = sprTailsBossToss; //Set the sprites accordingly
    
    if sprite_index == sprTailsBossToss &amp;&amp; image_index &gt; 8 &amp;&amp; image_index &lt; 10 &amp;&amp; !instance_exists (objDummyRingBomb) 
    {
        //Toss the ring bomb
        instance_create (x, y, objDummyRingBomb);
        
        if !audio_is_playing (sndTailsThrow) audio_play_sound (sndTailsThrow, 10, false);
    }
}
else if attackPattern == 4 //Combination of flying and throwing a dummy ring bomb
{
    attackFrames = 120; //Set the alarm to two seconds 
    vspeed = -3.6; //Set the vertical speed
    gravity = 0; //No gravity forces implied here
    sprite_index = sprTailsBossFly; //Set the sprites accordingly
    
    if !audio_is_playing (sndTailsFly)
        audio_play_sound (sndTailsFly, 10, false);
    
    if y &lt;= 224 &amp;&amp; sprite_index == sprTailsBossFly //If the boss reaches a certin height, stop and throw a dummy ring bomb
    {
        vspeed = 0;
        if !instance_exists (objDummyRingBomb)
        {
               instance_create (x, y, objDummyRingBomb);
               attackPattern = 5;
        }
    }
}
else if attackPattern == 5 //Land after jump
{
    sprite_index = sprTailsBossJump;
    gravity = 0.25;
    
    if ground
    {
        vspeed = 0;
        gravity = 0;
        attackPattern = 0;
    }
}
else if attackPattern == 6
{
    if ground &amp;&amp; vspeed &gt;= 0 //If on the ground, set the attack back to stance
    {
        vel = 0;
        vspeed = 0;
        attackPattern = 0;
    }
}
else if attackPattern == "kill"
{
    attackFrames = 120;
    vel = (image_xscale*-2.5);
    vspeed = -5;
    ground = false;
    sprite_index = sprTailsBossHurt;
    attackPattern = "kkill";
    
    if !audio_is_playing (sndTailsHurt)
        audio_play_sound (sndTailsHurt, 10, false);
}
else if attackPattern == "kkill"
{
    gravity = 0.25;
    
    if ground == true &amp;&amp; vspeed &gt;= 0
       instance_change (objTailsBossDie, true);
}

//Check if on the ground
if place_meeting (x, y+1, objSolid2)
{
    ground = true;
    gravity = 0;
}
else
{
    ground = false;
    if sprite_index != sprTailsBossFly
       gravity = 0.25;
    else
        gravity = 0;
}

//The hpoints variable being assigned to the hits variable. 1 hit = 25 hpoints.
if hpoints &lt;= 0
   hits = 0;
else if hpoints &lt;= 25
     hits = 1;
else if hpoints &lt;= 50
     hits = 2;
else if hpoints &lt;= 75
     hits = 3;
else if hpoints &lt;= 100
     hits = 4;
else if hpoints &lt;= 125
     hits = 5;
else if hpoints &lt;= 150
     hits = 6;
else if hpoints &lt;= 175
     hits = 7;
else if hpoints &lt;= 200
     hits = 8;
else if hpoints &lt;= 225
     hits = 9;
else if hpoints &lt;= 250
     hits = 10;
else if hpoints &lt;= 275
     hits = 11;
else if hpoints &lt;= 300
     hits = 12;
else if hpoints &lt;= 325
     hits = 13;
else if hpoints &lt;= 350
     hits = 14;
else if hpoints &lt;= 375
     hits = 15;
else if hpoints &lt;= 400
     hits = 16;
     
x += vel; //This action allows the boss to move

if hpoints &lt;= 0
   attackPattern = "kill"; //If the boss is out of health, the boss dies
   
alarm[0] = attackFrames; //Always sets the alarm to the attackFrames variable
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBulletGun">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hpoints &gt; other.attackStrength &amp;&amp; canHit == true)
{
    canHit = false;
    alarm[1] = 30;
    hpoints -= other.attackStrength;
}
else if hpoints &lt;= other.attackStrength &amp;&amp; canHit == true
    attackPattern = "kill";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFireball">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hpoints &gt; 8 &amp;&amp; canHit == true)
{
    canHit = false;
    alarm[1] = 30;
    hpoints -= 8;
}
else if hpoints &lt;= 8 &amp;&amp; canHit == true
    attackPattern = "kill";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSuperPikeBall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hpoints &gt; 5 &amp;&amp; canHit == true)
{
    canHit = false;
    alarm[1] = 30;
    hpoints -= 5;
}
else if hpoints &lt;= 5 &amp;&amp; canHit == true
    attackPattern = "kill";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPikeBall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hpoints &gt; 5 &amp;&amp; canHit == true)
{
    canHit = false;
    alarm[1] = 30;
    hpoints -= 5;
}
else if hpoints &lt;= 5 &amp;&amp; canHit == true
    attackPattern = "kill";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSolid2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid (direction, 12);
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objShantaeDuckWhipBox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hpoints &gt; objShantae.attackStrength &amp;&amp; canHit == true &amp;&amp; objShantae.sprite_index == sprShantaeDuckWhip &amp;&amp; sprite_index == sprTailsBossStand) &amp;&amp; instance_exists (objShantae)
{
    canHit = false;
    alarm[1] = 30;
    hpoints -= objShantae.attackStrength;
}
else if (hpoints &lt;= objShantae.attackStrength &amp;&amp; canHit == true &amp;&amp; objShantae.sprite_index == sprShantaeDuckWhip &amp;&amp; sprite_index == sprTailsBossStand) &amp;&amp; instance_exists (objShantae)
{
     attackPattern = "kill";
}

with other instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objShantaeStandWhipBox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hpoints &gt; objShantae.attackStrength &amp;&amp; canHit == true &amp;&amp; objShantae.sprite_index == sprShantaeStandWhip &amp;&amp; sprite_index == sprTailsBossStand) &amp;&amp; instance_exists (objShantae)
{
    canHit = false;
    alarm[1] = 30;
    hpoints -= objShantae.attackStrength;
}
else if (hpoints &lt;= objShantae.attackStrength &amp;&amp; canHit == true &amp;&amp; objShantae.sprite_index == sprShantaeStandWhip &amp;&amp; sprite_index == sprTailsBossStand) &amp;&amp; instance_exists (objShantae)
{
     attackPattern = "kill";
}

with other instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objShantae">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.canGetHit == true
{
    //Hurt the player
    if global.hearts &gt; attackDamage
    {
        scrShantaeGetHit();
        
        if global.shield == 0
            global.hearts -= attackDamage;
        else if global.shield &gt; 0
            global.shield = 0;
    }
    //Kill the player
    else if global.hearts &lt;= attackDamage
    {
        global.hearts = 0;
        with other instance_change (objShantaeHitDie, true);
    }
}
else
{
    //nothing else
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index == sprTailsBossToss
{
    attackPattern = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create (0, 0, objBossHP16);
instance_create (0, 0, objTailsIcon);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hpoints &lt; initHpoints
{
    draw_set_font (fntFont);
    scrDrawOutlines (x, y-50, hpoints, c_black, c_white, 2);
}

if sprite_index != sprite_old
{
    image_index = 0;
    sprite_old = sprite_index;
}

draw_sprite_ext (sprite_index, image_index, round(x), round(y), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
