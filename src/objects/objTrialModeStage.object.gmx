<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTrialModeStage</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
option = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto (rmTrialCharacter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch option
{
    case 0:
        switch image_index
        {
            case 0:
                switch global.trialcharacter
                {
                    case 0: room_goto (rmTitlecard1); break;
                    case 2: room_goto (rmTitlecard1K); break;
                    case 4: room_goto (rmTitlecard1Sh); break;
                    case 6: room_goto (rmTitlecard1Sl); break;
                    case 8: room_goto (rmTitlecard1T); break;
                }
            break;
            case 1:
                room_goto (rmTitlecard1S);
            break;
        }
    break;
    case 1:
        switch image_index
        {
            case 2:
                switch global.trialcharacter
                {
                    case 0: room_goto (rmTitlecard2); break;
                    case 2: room_goto (rmTitlecard2K); break;
                    case 4: room_goto (rmTitlecard2Sh); break;
                    case 6: room_goto (rmTitlecard2Sl); break;
                }
            break;
            case 3:
                room_goto (rmTitlecard2S);
            break;
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.trialcharacter == 0 or global.trialcharacter == 2 or global.trialcharacter == 4 or global.trialcharacter == 6 or global.trialcharacter == 8 or global.trialcharacter == 10
{
    stage[0] = 0;
    stage[1] = 2;
}
else
{
    stage[0] = 1;
    stage[1] = 3;
}

if !instance_exists (objFade)
{
    if keyboard_check_pressed (vk_left) &amp;&amp; option &gt; 0 &amp;&amp; global.trialcharacter != 8 &amp;&amp; global.trialcharacter != 10
    {
        option -= 1;
        audio_play_sound (sndMenuNavigate, 10, false);
    }
    if keyboard_check_pressed (vk_right) &amp;&amp; option &lt; 1 &amp;&amp; global.trialcharacter != 8 &amp;&amp; global.trialcharacter != 10
    {
        option += 1;
        audio_play_sound (sndMenuNavigate, 10, false);
    }
    
    if keyboard_check_pressed (ord("Z")) or keyboard_check_pressed (vk_enter)
    {
        audio_play_sound (sndMenuSelect, 10, false);
        alarm[0] = 40;
        instance_create (0, 0, objFade);
    }
    if keyboard_check_pressed (ord("X"))
    {
        audio_play_sound (sndMenuCancel, 10, false);
        alarm[1] = 40;
        instance_create (0, 0, objFade);
    }
}

image_index = stage[option];
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
