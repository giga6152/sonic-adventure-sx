<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEggPawnGunStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemyParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = 0;
alarm[0] = irandom_range (50, 62);
state = 0;
hp = 3;
can_attack = true;
image_xscale = 1;
invulnerable = false;
ready = 0;
blink = 10;
image_speed = 0.16;
delay = 30;
ledge = false;
ledge_old = ledge;
switch_xscale = false;
display = 120;
attacking = false;
sprite_old = sprite_index;
t = 1;
shots = 3;
points_award = 400;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invulnerable = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_attack = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state == 0 image_xscale = -image_xscale;
hspeed = 0;
alarm[0] = irandom_range (50, 62);
sprite_index = sprEggPawnGunStand;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state == 0 &amp;&amp; !ledge
{
    switch_xscale = false;
    hspeed = image_xscale;
    alarm[1] = 135;
    sprite_index = sprEggPawnGunWalk;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited(); //Calls the step event of the enemy parent for easy reference

var in_range, within_range, distance, player; //Temporary variable setup
player = objSonicModified; //Variable for the player object
distance = distance_to_object (player); //Distance set to this function
in_range = distance &lt; 120 //If the egg pawn is in range
within_range = distance &lt; 90 //If the egg pawn is close to the player, use an attack

if in_range &amp;&amp; can_attack &amp;&amp; !invulnerable //If the player is close, chase the player
{
    alarm[0] += 1;
    state = 1;
    switch_xscale = false;
    
    if x &gt;= player.x &amp;&amp; delay &lt;= 0 //Check the player position and face them
    {
        image_xscale = -1;
        delay = 30;
    }
    else if x &lt; player.x &amp;&amp; delay &lt;= 0 //Same goes for the other side
    {
        image_xscale = 1;
        delay = 30;
    }
    
    attacking = true; //The egg pawn is now attacking the player
    sprite_index = sprEggPawnGunShoot; //Set the sprite
    hspeed = 0; //Set the speed
}
else //Return to standing position
{
    state = 0;
}

if !attacking shots = 3;

if (instance_exists (player) &amp;&amp; player.action == 9) or ready &gt; 0 or instance_exists (objEggPawnGunProjectile) //If the player is hurt or the enemy is hurt, or if the enemy's projectile exists, stop attacking
{
    can_attack = false;
    alarm[2] = 120;
}

if instance_exists (player) &amp;&amp; place_meeting (x, y, player) &amp;&amp; player.atk &amp;&amp; !invulnerable &amp;&amp; ready &lt;= 0 //If the player attacks the enemy
{
    if global.invincible or global.superstate &gt; 0 instance_change (objEnemyDestroy, true);
    else
    {
        blink -= 1;
        if blink &lt;= 0 blink = 10;
    }
}

//Make the enemy attack the player
if attacking
{
    if sprite_index == sprEggPawnGunShoot &amp;&amp; image_index &gt; 0 &amp;&amp; image_index &lt; 1
    {
        if t
        {
            effect_create_above (ef_firework, x+(image_xscale*25), y-8, 1.2, c_white);
            instance_create (x+(image_xscale*25), y-8, objEggPawnGunProjectile); //Shoot the projectile, and create an effect
            t = 0;
        }
    }
}

delay -= 1; //Delay timer for the enemy. Controls him chasing the player

if place_free (x, y+8)
or place_meeting (x+hspeed+1, y, objWall) &amp;&amp; image_xscale &gt; 0
or place_meeting (x+hspeed-1, y, objWall) &amp;&amp; image_xscale &lt; 0 //If the egg pawn is touching a wall or close to a ledge, set the variable
{
    ledge = true;
    alarm[0] += 1;
    if instance_exists (objWall)
    {
        if (place_meeting (x+hspeed+1, y, objWall)) or x &gt; instance_nearest (x, y, objWall).x
            x -= 1;
        if (place_meeting (x+hspeed-1, y, objWall)) or x &lt; instance_nearest (x, y, objWall).x
            x += 1;
    }
    else
        x += 0;
}

if ledge //If the variable is set to true, set it back to false and make him move again.
{
    ledge = false;
    alarm[0] += 1;
    state = 0;
    hspeed = 0;
    
    if !switch_xscale
    {
        image_xscale = -image_xscale;
        switch_xscale = true;
    }
}

/*if place_meeting (x+hspeed+1, y, objWall) &amp;&amp; image_xscale &gt; 0
{
    state = 0;
    image_xscale = -1;
    hspeed = 0;
}
if place_meeting (x+hspeed-1, y, objWall) &amp;&amp; image_xscale &lt; 0
{
    state = 0;
    image_xscale = 1;
    hspeed = 0;
}*/

if hspeed == 0
{
    if attacking sprite_index = sprEggPawnGunShoot; else sprite_index = sprEggPawnGunStand;
}
if hp &lt;= 0
{
    instance_change (objEnemyDestroy, true);
    with instance_nearest (x, y, objEggPawnGunProjectile) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSonicModified">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if !invulnerable display = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if attacking
{
    if shots &lt;= 0
    {
        attacking = false;
        t = 1;
    }
    else
    {
        attacking = true;
        t = 1;
        shots --;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_old != sprite_index
{
    sprite_old = sprite_index;
    image_index = 0;
}

if invulnerable
    draw_sprite_ext (sprite_index, image_index, x, y, image_xscale, 1, 0, c_white, 0.5);
else
    draw_sprite_ext (sprite_index, image_index, x, y, image_xscale, 1, 0, c_white, 1);
    
if hp == 2 &amp;&amp; display &gt; 0
{
    display --;
    draw_sprite_ext (sprEnemyHP, 1, x, y-50, 1, 1, 0, c_white, 1);
}
else if hp == 1 &amp;&amp; display &gt; 0
{
    display --;
    draw_sprite_ext (sprEnemyHP, 0, x, y-50, 1, 1, 0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
