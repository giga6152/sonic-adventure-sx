<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSEBActions</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtMoving</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed = 4; //The boss is constantly moving forward
gravity = 0;
image_xscale = 1; //Face toward the right
bombtimer = 72; //Timer for when a bomb will drop, in frames
dth = 25; //Timer for explosions around the boss if dead
fd = 175; //How long till the boss falls if dead
bounces = 0; //Death bounces

action = 0; //Actions
hits = 8; //The boss' health
audio_play_sound (sndEggmanLaugh, 10, false); //An extra effect, just because it's cool

//Animation variables
animation = 0;
animations_old = 0;
animations_frame = 0;
animations_speed = 0;
animations_framemin = 0;
animations_framemax = 0;
animations_return = 0;
animations_timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hits &gt; 0
{
    action = 0;
    bombtimer = 1;
}
else
    action = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//The SEB's step properties.

/*This boss is a combination of the Spinning Egg from Sonic 1 and the Aero Egg from Sonic
Advance 2. The boss is also in the style of Sonic Advance 2 to where the boss is constantly
moving forward.*/

//First, drop bombs at certain points
if action == 0 bombtimer --;
else bombtimer = 72;

if bombtimer &lt;= 0 //If the timer has gone off
{
    bombtimer = 72; //Reset the timer
    instance_create (x, y+21, objSEBBomb); //"Drop" the bomb
}

//If the boss is dead, create explosions
if action == 2
{
    if dth &gt; 0 dth --;
    else 
    {
        dth = 25;
        instance_create (x-15+random(30), y-15+random(30), objEnemyDestroy2);
    }
    
    if fd != 0 fd --;
    else
    {
        fd = -1;
        hspeed = 0;
        if bounces &lt; 2 gravity = 0.25; else gravity = 0;
    }
    
    if place_meeting (x, y, objBorderLeft)
        instance_change (objEggmobile, true);
}
else
{
    dth = 25;
    fd = 175;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bounces &lt; 2 &amp;&amp; vspeed &gt;= 0
{
    vspeed = -bounces;
    bounces --;
}
else if vspeed &gt;= 0
{
    vspeed = 0;
    gravity = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSonicModified">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if action == 0 &amp;&amp; other.atk &gt; 0
{
    action = 1;
    hits --;
    audio_play_sound (sndEggmanHurt, 10, false);
    alarm[0] = 75;
    audio_play_sound (sndBadnikDestroy, 10, false);
    
    if other.vsp &gt; 0
    {
        if keyboard_check (ord("Z"))
        {
            if other.vsp &gt; 3
                other.vsp = -other.vsp;
            else
                other.vsp = -3;
        }
        else
            other.vsp = -3;
    }
}
else if action == 1
{
    //got nothin'!
}
else if global.invincible == false &amp;&amp; global.superstate == 0 &amp;&amp; global.rings &gt; 0 &amp;&amp; action == 0
{
with other
{
if atk=0 &amp;&amp; ready&lt;=0 &amp;&amp; enable=1
{
{
ready=200
action=9
audio_play_sound (hurtvoice, 10, false)

if global.shield == 0 &amp;&amp; global.rings &gt; 0
{
    audio_play_sound (sndRingLose, 10, false)
    
    if global.rings &lt;= 32 scrLoseRings(global.rings,x,y,objLoseRing) else scrLoseRings(32,x,y,objLoseRing)
    
    global.rings = 0;
}
else
{
    global.shield = 0
}

ground=0
vsp=-5
enable=0
}
}
}
}
else if global.rings == 0 &amp;&amp; global.shield == 0
with other 
{
if atk=0 &amp;&amp; ready&lt;=0 &amp;&amp; enable=1 &amp;&amp; action == 0 //Player dies if there are no rings
{
instance_change (deathobj, true);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create the HUD
instance_create (0, 0, objBossHP); //Displays the boss' health
instance_create (0, 0, objEggmanIcon); //Boss Icon
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Animation system

if action == 0 //Normal
{
    animation = 0;
    animations_framemin = 0;
    animations_framemax = 0;
    animations_return = 0;
    animations_speed = 0;
}
if action == 1 or action == 2 //Getting hit/Defeated
{
    animation = 1;
    animations_framemin = 1;
    animations_framemax = 2;
    animations_return = 1;
    animations_speed = 30;
}

//==========================================================
    // Core of the animation system

    // If animation changed, change to the new parameters...
    if (animation!=animations_old) {
        animations_frame=animations_framemin;
        animations_timer=0;
        animations_old=animation;
    }

    // Add to the timer
    animations_timer+=animations_speed

    if (animations_timer&gt;=100)  // Check if we are ready to change of frame
    {    
        animations_timer=0;
        animations_frame+=1;
        
        if (animations_frame&gt;animations_framemax)
        {
            animations_frame=animations_return;
        }
    }
    
//Draw the sprite
draw_sprite_ext (sprSEBActions, animations_frame, floor(x), floor(y), image_xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
